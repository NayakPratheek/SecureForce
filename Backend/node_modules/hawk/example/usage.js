// Load modules

var Http = require('http');
var Request = require('request');
var Hawk = require('../lib');


// Declare internals

<<<<<<< HEAD
var internals = {
    credentials: {
        dh37fgj492je: {
            id: 'dh37fgj492je',                                             // Required by Hawk.client.header 
            key: 'werxhqb98rpaxn39848xrunpaw3489ruxnpa98w4rxn',
            algorithm: 'sha256',
            user: 'Steve'
        }
    }
=======
var internals = {
    credentials: {
        dh37fgj492je: {
            id: 'dh37fgj492je',                                             // Required by Hawk.client.header 
            key: 'werxhqb98rpaxn39848xrunpaw3489ruxnpa98w4rxn',
            algorithm: 'sha256',
            user: 'Steve'
        }
    }
>>>>>>> 7390a882ef100eb3e3bf984e742cb97d921bf2de
};


// Credentials lookup function

<<<<<<< HEAD
var credentialsFunc = function (id, callback) {

    return callback(null, internals.credentials[id]);
=======
var credentialsFunc = function (id, callback) {

    return callback(null, internals.credentials[id]);
>>>>>>> 7390a882ef100eb3e3bf984e742cb97d921bf2de
};


// Create HTTP server

<<<<<<< HEAD
var handler = function (req, res) {

    Hawk.server.authenticate(req, credentialsFunc, {}, function (err, credentials, artifacts) {

        var payload = (!err ? 'Hello ' + credentials.user + ' ' + artifacts.ext : 'Shoosh!');
        var headers = {
            'Content-Type': 'text/plain',
            'Server-Authorization': Hawk.server.header(artifacts, { payload: payload, contentType: 'text/plain' })
        };

        res.writeHead(!err ? 200 : 401, headers);
        res.end(payload);
    });
=======
var handler = function (req, res) {

    Hawk.server.authenticate(req, credentialsFunc, {}, function (err, credentials, artifacts) {

        var payload = (!err ? 'Hello ' + credentials.user + ' ' + artifacts.ext : 'Shoosh!');
        var headers = {
            'Content-Type': 'text/plain',
            'Server-Authorization': Hawk.server.header(artifacts, { payload: payload, contentType: 'text/plain' })
        };

        res.writeHead(!err ? 200 : 401, headers);
        res.end(payload);
    });
>>>>>>> 7390a882ef100eb3e3bf984e742cb97d921bf2de
};

Http.createServer(handler).listen(8000, '127.0.0.1');


// Send unauthenticated request

<<<<<<< HEAD
Request('http://127.0.0.1:8000/resource/1?b=1&a=2', function (error, response, body) {

    console.log(response.statusCode + ': ' + body);
=======
Request('http://127.0.0.1:8000/resource/1?b=1&a=2', function (error, response, body) {

    console.log(response.statusCode + ': ' + body);
>>>>>>> 7390a882ef100eb3e3bf984e742cb97d921bf2de
});


// Send authenticated request

var header = Hawk.client.header('http://127.0.0.1:8000/resource/1?b=1&a=2', 'GET', { credentials: internals.credentials.dh37fgj492je, ext: 'and welcome!' });
<<<<<<< HEAD
var options = {
    uri: 'http://127.0.0.1:8000/resource/1?b=1&a=2',
    method: 'GET',
    headers: {
        authorization: header.field
    }
};


Request(options, function (error, response, body) {

    var isValid = Hawk.client.authenticate(response, header.artifacts, { payload: body });
    console.log(response.statusCode + ': ' + body + (isValid ? ' (valid)' : ' (invalid)'));
    process.exit(0);
=======
var options = {
    uri: 'http://127.0.0.1:8000/resource/1?b=1&a=2',
    method: 'GET',
    headers: {
        authorization: header.field
    }
};


Request(options, function (error, response, body) {

    var isValid = Hawk.client.authenticate(response, header.artifacts, { payload: body });
    console.log(response.statusCode + ': ' + body + (isValid ? ' (valid)' : ' (invalid)'));
    process.exit(0);
>>>>>>> 7390a882ef100eb3e3bf984e742cb97d921bf2de
});


